// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
@import "themes/tailwind";
@import "@angular/cdk/overlay-prebuilt.css";

:root {
  --color-primary: #004859;
  --color-accent: #ff8888;
  --color-accent-secondary: #ffc15a;
  --color-accent-secondary-darker: #faa415;
  --color-success: #4caf50;
  --color-error: #ff5722;
  --color-info: #449eff;
  --color-background: #eceff1;
  --color-text: #263238;
  --color-text-light: #607d8b;
  --height-header: 64px;
  --height-footer: 48px;
  --border-radius: 10px;
  --spacing-step: 8px;
  --font-size-h1: 34px;
}

// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$CustomControls-primary: mat.define-palette(mat.$indigo-palette);
$CustomControls-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$CustomControls-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$CustomControls-theme: mat.define-light-theme(
  (
    color: (
      primary: $CustomControls-primary,
      accent: $CustomControls-accent,
      warn: $CustomControls-warn
    )
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($CustomControls-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field
  .mdc-notched-outline__notch {
  border-right-style: hidden;
}

::-webkit-scrollbar {
  width: 0.25rem;
}

::-webkit-scrollbar-track {
  background: #e0e0e0;
}

::-webkit-scrollbar-thumb {
  background: #616161;
}

a {
  color: var(--color-accent);
  text-decoration: none;
  &:hover {
    text-decoration: underline;
  }
}

form {
  padding: calc(var(--spacing-step) * 3);
  box-sizing: border-box;
  border-radius: var(--border-radius);
  background: var(--color-background);
  min-width: 395px;
  width: 100%;
  max-width: 450px;
}

label,
input:not([type="checkbox"]),
fieldset,
button {
  width: 100%;
  box-sizing: border-box;
}

input[type="checkbox"] {
  width: 16px;
  height: 16px;
  margin-right: var(--spacing-step);
}

fieldset {
  border-radius: var(--border-radius);
  border: 1px solid var(--color-text-light);
  margin-top: var(--spacing-step);
}

button {
  margin-top: calc(var(--spacing-step) * 2);
  background-color: var(--color-accent-secondary);
  border: var(--color-accent-secondary-darker) 1px solid;
  color: var(--color-text);
  font-weight: bold;
  cursor: pointer;
  &:hover {
    opacity: 0.8;
  }
  &:active {
    background-color: var(--color-accent-secondary-darker);
    border: var(--color-accent-secondary) 1px solid;
  }
  &.reset-button {
    background-color: transparent;
    border: var(--color-primary) 1px solid;
  }
}

input,
select {
  border: var(--color-text) solid 2px;
}

legend {
  font-weight: bold;
}

input,
button,
select {
  border-radius: 5px;
  font-size: 18px;
  padding: 10px 11px;
}

select {
  width: 100%;
}

.ng-valid.ng-dirty:not([formGroupName]):not([formArrayName]):not([ngModelGroup]):not(form):not(paper-textarea) {
  border: 2px solid var(--color-success);
}
.ng-invalid.ng-dirty:not([ngModelGroup="address"]):not([formGroupName="address"]):not([formArrayName]):not(form) {
  border: 2px solid var(--color-error);
}

button[disabled] {
  background-color: rgba(0, 0, 0, 0.15);
  border-color: rgba(0, 0, 0, 0.1);
  pointer-events: none;
}

@keyframes input-message-animation {
  from {
    opacity: 0;
    transform: translateY(-6px);
  }
  to {
    opacity: 1;
    transform: translateY(0px);
  }
}

@mixin input-message() {
  font-size: 12px;
  box-sizing: border-box;
  padding: 2px 13px;
  animation-name: input-message-animation;
  animation-duration: 300ms;
}

.input-error {
  @include input-message();
  color: var(--color-error);
}
.input-info {
  @include input-message();
  color: var(--color-info);
}
.review-textarea {
  border-radius: var(--border-radius);
  background-color: white;
  padding: calc(var(--spacing-step) * 2);
  margin-top: var(--spacing-step);
  min-height: 74px;
  box-sizing: border-box;
  h4 {
    margin-bottom: var(--spacing-step);
    &:empty:before {
      content: attr(data-placeholder);
      opacity: 0.6;
    }
  }
  p,
  div {
    &:empty:before {
      content: attr(data-placeholder);
      opacity: 0.6;
    }
  }
}
